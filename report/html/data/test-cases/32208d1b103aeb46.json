{
  "uid" : "32208d1b103aeb46",
  "name" : "test_login[13800138002-123456-8888--2-200-image-账号不存在]",
  "fullName" : "scripts.api.test_login.TestLoginApi#test_login",
  "historyId" : "4be6697df69dce67026ec3bd603702c9",
  "time" : {
    "start" : 1671638148762,
    "stop" : 1671638153033,
    "duration" : 4271
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert -2 == -1\n  +-2\n  --1",
  "statusTrace" : "self = <scripts.api.test_login.TestLoginApi object at 0x00000236B65431D0>, username = 13800138002, password = 123456, code = 8888, status = -2, status_code = 200\ncontent_type = 'image', msg = '账号不存在'\n\n    @pytest.mark.parametrize(\"username, password, code, status, status_code, content_type, msg\",\n                             get_data(\"api/login_case.json\"))\n    def test_login(self, username, password, code, status, status_code, content_type, msg):\n        try:\n            logger.info(\"准备输入登录的接口测试用例：username={}，password={}，code={}\".format(username, password, code))\n            # 先获取验证码来断言\n            response = self.login_api.get_verify_code(self.session)\n            assert status_code == response.status_code\n            assert content_type in response.headers.get(\"Content-Type\")\n    \n            # 登录断言\n            response = self.login_api.login(self.session, username, password, code)\n            assert status_code == response.status_code\n>           assert status == response.json().get(\"status\")\nE           assert -2 == -1\nE             +-2\nE             --1\n\nscripts\\api\\test_login.py:34: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1671638131614,
      "stop" : 1671638131614,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert -2 == -1\n  +-2\n  --1",
    "statusTrace" : "self = <scripts.api.test_login.TestLoginApi object at 0x00000236B65431D0>, username = 13800138002, password = 123456, code = 8888, status = -2, status_code = 200\ncontent_type = 'image', msg = '账号不存在'\n\n    @pytest.mark.parametrize(\"username, password, code, status, status_code, content_type, msg\",\n                             get_data(\"api/login_case.json\"))\n    def test_login(self, username, password, code, status, status_code, content_type, msg):\n        try:\n            logger.info(\"准备输入登录的接口测试用例：username={}，password={}，code={}\".format(username, password, code))\n            # 先获取验证码来断言\n            response = self.login_api.get_verify_code(self.session)\n            assert status_code == response.status_code\n            assert content_type in response.headers.get(\"Content-Type\")\n    \n            # 登录断言\n            response = self.login_api.login(self.session, username, password, code)\n            assert status_code == response.status_code\n>           assert status == response.json().get(\"status\")\nE           assert -2 == -1\nE             +-2\nE             --1\n\nscripts\\api\\test_login.py:34: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c2c18d35ed66e022",
      "name" : "log",
      "source" : "c2c18d35ed66e022.txt",
      "type" : "text/plain",
      "size" : 255
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1671638153042,
      "stop" : 1671638153042,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "scripts.api"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLoginApi"
  }, {
    "name" : "host",
    "value" : "DESKTOP-BV7K5QK"
  }, {
    "name" : "thread",
    "value" : "10120-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.api.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "code",
    "value" : "8888"
  }, {
    "name" : "content_type",
    "value" : "'image'"
  }, {
    "name" : "msg",
    "value" : "'账号不存在'"
  }, {
    "name" : "password",
    "value" : "123456"
  }, {
    "name" : "status",
    "value" : "-2"
  }, {
    "name" : "status_code",
    "value" : "200"
  }, {
    "name" : "username",
    "value" : "13800138002"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "32208d1b103aeb46.json",
  "parameterValues" : [ "8888", "'image'", "'账号不存在'", "123456", "-2", "200", "13800138002" ]
}